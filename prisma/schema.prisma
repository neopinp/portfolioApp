generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model assets {
  symbol       String    @id @db.VarChar(255)
  name         String?   @db.VarChar(255)
  sector       String?   @db.VarChar(255)
  beta         Decimal?  @db.Decimal
  risk_rating  Decimal?  @db.Decimal
  last_updated DateTime? @default(now()) @db.Timestamp(6)
  type         String
}

model holdings {
  id              Int        @id @default(autoincrement())
  portfolio_id    Int
  asset_symbol    String     @db.VarChar(10)
  amount          Decimal    @db.Decimal(12, 2)
  bought_at_price Decimal?   @db.Decimal(12, 2)
  created_at      DateTime?  @default(now()) @db.Timestamp(6)
  portfolios      portfolios @relation(fields: [portfolio_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model portfolio_snapshots {
  id            Int         @id @default(autoincrement())
  portfolio_id  Int?
  snapshot_date DateTime?   @default(dbgenerated("CURRENT_DATE")) @db.Date
  total_value   Decimal     @db.Decimal
  portfolios    portfolios? @relation(fields: [portfolio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model portfolios {
  id                  Int                   @id @default(autoincrement())
  user_id             Int
  name                String?               @db.VarChar(100)
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  starting_balance    Decimal               @default(0) @db.Decimal
  holdings            holdings[]
  portfolio_snapshots portfolio_snapshots[]
  users               users                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  username   String?      @unique
  portfolios portfolios[]
}
